{"version":3,"sources":["components/Header/Cart.js","components/Header/Header.js","components/Footer/Footer.js","components/ProductCard/ProductCard.js","store/actions/actionTypes.js","store/actions/products.js","pages/Products/Products.js","components/Product/Product.js","store/actions/cart.js","pages/ProductDetail/ProductDetail.js","components/CheckoutItem/CheckoutItem.js","pages/Checkout/Checkout.js","App.js","reportWebVitals.js","store/reducers/products.js","store/reducers/cart.js","index.js"],"names":["Cart","totalItems","useSelector","state","cart","className","to","Header","Footer","ProductCard","props","alt","src","img","title","price","id","GET_PRODUCTS","SET_PRODUCTS","SET_ERROR","ADD_ITEM_IN_CART","setProducts","products","type","actionTypes","fetchProducts","dispatch","a","fetch","response","json","Products","error","loading","useDispatch","useEffect","actions","ProductCards","map","product","image_url","Product","useState","quantity","setQuantity","onClick","disabled","qty","ProductDetail","useParams","allProductsLoaded","productSingle","find","parseInt","CheckoutItem","Checkout","items","checkoutItems","totalPrice","length","item","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","addItem","push","rootReducer","combineReducers","productsReducer","cartReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2933a79e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Cart.css\";\r\n\r\nconst Cart = () => {\r\n    const { totalItems } = useSelector((state) => ({\r\n        totalItems: state.cart.totalItems,\r\n    }));\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            <h4>\r\n                <Link to=\"/checkout\">Your Cart: {totalItems}</Link>\r\n            </h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport Cart from \"./Cart\";\r\nimport \"./Header.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <h2>\r\n                <Link to=\"/\">E-commerce</Link>\r\n            </h2>\r\n            <Cart />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>&copy; 2021 E-commerce</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./ProductCard.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductCard = (props) => {\r\n    return (\r\n        <div className=\"product-card\" alt=\"product title\">\r\n            <img\r\n                className=\"product-card__img\"\r\n                src={props.img}\r\n                alt={props.title + \" image\"}\r\n            />\r\n            <h3 className=\"product-card__name\">{props.title}</h3>\r\n            <div className=\"product-card__footer\">\r\n                <h5 className=\"product-card__footer__price\">â‚¹ {props.price}</h5>\r\n                <Link\r\n                    to={\"/\" + props.id}\r\n                    className=\"product-card__footer__view\"\r\n                >\r\n                    View product\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCard;\r\n","export const GET_PRODUCTS = \"GET_PRODUCTS\";\r\nexport const SET_PRODUCTS = \"SET_RPODUCTS\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\n\r\nexport const ADD_ITEM_IN_CART = \"ADD_ITEM_IN_CART\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const getProducts = () => {\r\n    return {\r\n        type: actionTypes.GET_PRODUCTS,\r\n    };\r\n};\r\n\r\nexport const setProducts = (products) => {\r\n    return {\r\n        products,\r\n        type: actionTypes.SET_PRODUCTS,\r\n    };\r\n};\r\n\r\nexport const setError = () => {\r\n    return {\r\n        type: actionTypes.SET_ERROR,\r\n    };\r\n};\r\n\r\nexport const fetchProducts = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            // set Loading: true by dispatching getProducts\r\n            dispatch(getProducts());\r\n\r\n            // get data.json from public directory\r\n            const response = await fetch(\"./data.json\");\r\n            const products = await response.json();\r\n\r\n            // set products after getting json data\r\n            dispatch(setProducts(products));\r\n        } catch (err) {\r\n            // Set error: true if error\r\n            dispatch(setError());\r\n        }\r\n    };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport ProductCard from \"./../../components/ProductCard/ProductCard\";\r\nimport \"./Products.css\";\r\n\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Products = () => {\r\n    // getting states from products reducer\r\n    const { products, loading, error } = useSelector((state) => ({\r\n        products: state.products.products,\r\n        error: state.products.error,\r\n        loading: state.products.loading,\r\n    }));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // dispatching fetching products action\r\n    useEffect(() => {\r\n        dispatch(actions.fetchProducts());\r\n    }, []);\r\n\r\n    // intialize this variable to loading\r\n    let ProductCards = <h2>Fetching Products...</h2>;\r\n\r\n    // map products into ProductCards\r\n    if (products && loading === false) {\r\n        ProductCards = products.map((product) => {\r\n            return (\r\n                <ProductCard\r\n                    key={product.id}\r\n                    id={product.id}\r\n                    title={product.title}\r\n                    img={product.image_url}\r\n                    price={product.price}\r\n                />\r\n            );\r\n        });\r\n    } else if (error) {\r\n        ProductCards = <h2>Something went wrong</h2>;\r\n    }\r\n\r\n    return <div className=\"container products\">{ProductCards}</div>;\r\n};\r\n\r\nexport default Products;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"./../../store/actions/index\";\r\n\r\nimport \"./Product.css\";\r\n\r\nconst Product = (props) => {\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const addItemInCart = () => {\r\n        dispatch(actions.addItem(props.id, quantity));\r\n    };\r\n\r\n    return (\r\n        <div className=\"product-detail\">\r\n            <div className=\"product-detail__img\">\r\n                <img src={props.image_url} alt={\"product\"} />\r\n            </div>\r\n            <div className=\"product-detail__information\">\r\n                <h1 className=\"product-detail__title\">{props.title}</h1>\r\n                <h5 className=\"product-detail__price\">Price: â‚¹{props.price}</h5>\r\n\r\n                <div className=\"product-detail__footer\">\r\n                    <div className=\"product-detail__quantity\">\r\n                        <h5>Quantity: </h5>\r\n                        <button\r\n                            onClick={() => {\r\n                                setQuantity(quantity - 1);\r\n                            }}\r\n                            disabled={quantity <= 1 ? true : false}\r\n                        >\r\n                            -\r\n                        </button>\r\n                        <span>{quantity}</span>\r\n                        <button\r\n                            onClick={() => {\r\n                                setQuantity(quantity + 1);\r\n                            }}\r\n                        >\r\n                            +\r\n                        </button>\r\n                    </div>\r\n                    <button\r\n                        className=\"product-detail__addToCart\"\r\n                        onClick={addItemInCart}\r\n                    >\r\n                        Add to Cart\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const addItem = (id, qty) => {\r\n    return {\r\n        type: actionTypes.ADD_ITEM_IN_CART,\r\n        id,\r\n        qty,\r\n    };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport * as actions from \"./../../store/actions/index\";\r\n\r\nimport Product from \"./../../components/Product/Product\";\r\n\r\nconst ProductDetail = () => {\r\n    // Extracting id from url\r\n    const { id } = useParams();\r\n\r\n    // getting product from products reducer\r\n    const { products, allProductsLoaded } = useSelector((state) => ({\r\n        products: state.products.products,\r\n        allProductsLoaded: state.products.allProductsLoaded,\r\n    }));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // If state not initialized, dispatch fetch products action\r\n    useEffect(() => {\r\n        if (!allProductsLoaded) dispatch(actions.fetchProducts());\r\n    }, []);\r\n\r\n    let productSingle = \"Fetching product...\";\r\n\r\n    if (allProductsLoaded) {\r\n        productSingle = products.find((product) => product.id === parseInt(id));\r\n        productSingle = productSingle ? (\r\n            <Product\r\n                id={productSingle.id}\r\n                title={productSingle.title}\r\n                image_url={productSingle.image_url}\r\n                price={productSingle.price}\r\n            />\r\n        ) : null;\r\n\r\n        if (!productSingle) {\r\n            productSingle = <h1>Product not found</h1>;\r\n        }\r\n    }\r\n\r\n    return <div className=\"container\">{productSingle}</div>;\r\n};\r\n\r\nexport default ProductDetail;\r\n","import React from \"react\";\r\nimport \"./CheckoutItem.css\";\r\n\r\nconst CheckoutItem = (props) => {\r\n    return (\r\n        <div className=\"checkout-item\">\r\n            <div className=\"checkout-item__product-img\">\r\n                <img src={props.image_url} alt={props.title + \" image\"} />\r\n            </div>\r\n            <div className=\"checkout-item__product-info\">\r\n                <h2>{props.title}</h2>\r\n                <h4>Quantity: {props.quantity}</h4>\r\n                <h4>Total price: {props.price}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CheckoutItem;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport CheckoutItem from \"./../../components/CheckoutItem/CheckoutItem\";\r\n\r\nconst Checkout = () => {\r\n    const { items, totalItems, products } = useSelector((state) => ({\r\n        items: state.cart.items,\r\n        totalItems: state.cart.totalItems,\r\n        products: state.products.products,\r\n    }));\r\n\r\n    let checkoutItems = \"Fetching your items...\";\r\n    let totalPrice = 0;\r\n    if (items.length > 0) {\r\n        checkoutItems = items.map((item) => {\r\n            const product = products.find(\r\n                (product) => product.id === parseInt(item.id)\r\n            );\r\n\r\n            totalPrice = totalPrice + product.price * item.qty;\r\n\r\n            return (\r\n                <CheckoutItem\r\n                    image_url={product.image_url}\r\n                    title={product.title}\r\n                    quantity={item.qty}\r\n                    price={product.price * item.qty}\r\n                />\r\n            );\r\n        });\r\n    } else {\r\n        checkoutItems = <h1>No items in cart.</h1>;\r\n    }\r\n    return (\r\n        <div className=\"container checkout\">\r\n            <h5>Total Items: {totalItems}</h5>\r\n            <h5>Total price: {totalPrice}</h5>\r\n            {checkoutItems}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","import \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Products from \"./pages/Products/Products\";\nimport ProductDetail from \"./pages/ProductDetail/ProductDetail\";\nimport Checkout from \"./pages/Checkout/Checkout\";\n\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n\n            <Switch>\n                <Route exact path=\"/checkout\" component={Checkout} />\n                <Route exact path=\"/:id\" component={ProductDetail} />\n                <Route path=\"/\" component={Products} />\n                <Redirect to=\"/\" component={Products} />\n            </Switch>\n\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    products: null,\r\n    error: false,\r\n    loading: false,\r\n    allProductsLoaded: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n            };\r\n\r\n        case actionTypes.SET_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products: action.products,\r\n                error: false,\r\n                loading: false,\r\n                allProductsLoaded: true,\r\n            };\r\n\r\n        case actionTypes.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    totalItems: 0,\r\n};\r\n\r\nconst addItem = (state, id, qty) => {\r\n    // Get item if present in cart\r\n    const item = state.items.find((item) => item.id === id);\r\n\r\n    if (item) {\r\n        // If item already in cart increase quantity\r\n        item.qty = item.qty + qty;\r\n    } else {\r\n        // If item not present, create new item\r\n        state.items.push({ id, qty });\r\n    }\r\n\r\n    return state.items;\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_ITEM_IN_CART:\r\n            return {\r\n                ...state,\r\n                items: addItem(state, action.id, action.qty),\r\n                totalItems: state.totalItems + action.qty,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\n// redux\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n// Products reducer\nimport productsReducer from \"./store/reducers/products\";\nimport cartReducer from \"./store/reducers/cart\";\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    cart: cartReducer,\n});\n\nconst composeEnhancers =\n    process.env.NODE_ENV === \"development\"\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        : null || compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\n// const store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}